{"version":3,"sources":["firebaseConfig.js","components/hooks/useGetChoreData.js","components/styled/ChoreItemContainer.js","components/styled/CloseButton.js","components/ChoreItem.js","components/ChoresList.js","components/styled/InputTextField.js","components/styled/SubmitButton.js","components/styled/AddChoreForm.js","components/AddChore.js","components/styled/Header.js","components/styled/GlobalStyle.js","components/styled/Wrapper.js","components/styled/ChoreListContainer.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","useGetChoreData","_useState","useState","_useState2","Object","slicedToArray","choresData","setChoresData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","collection","get","then","snapshot","docs","map","e","id","task","data","person","fetchedChores","catch","error","console","log","sent","stop","apply","this","arguments","getChoreData","periodicRefresh","_ref2","_callee2","_context2","intervalId","setInterval","clearInterval","ChoreItemContainer","styled","div","_templateObject","props","odd","grey","CloseButton","Button","CloseButton_templateObject","ChoreItem","react_default","createElement","styled_ChoreItemContainer","Divider_default","styled_CloseButton","onClick","doc","delete","ChoreList","listOfChores","i","defineProperty","key","Fragment","InputTextField","TextField","InputTextField_templateObject","SubmitButton","SubmitButton_templateObject","AddChoreForm","form","AddChoreForm_templateObject","AddChore","taskInputValue","setTaskInputValue","personInputValue","setPersonInputValue","styled_AddChoreForm","onSubmit","preventDefault","add","styled_InputTextField","autoComplete","label","placeholder","value","onChange","target","margin","InputLabelProps","shrink","styled_SubmitButton","type","style","marginRight","Header","Header_templateObject","bgColor1","red","bgColor2","pink","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","Wrapper","Paper","Wrapper_templateObject","ChoreListContainer","ChoreListContainer_templateObject","Loading","Loading_templateObject","App","_useGetChoreData","styled_GlobalStyle","styled_Header","styled_Wrapper","components_AddChore","styled_ChoreListContainer","components_Loading","ChoresList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a303982a.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nvar config = {\n  apiKey: \"AIzaSyAGzlpCDZ5rg7vZ9XVzYqI4-LiXZ8ectX8\",\n  authDomain: \"test-45931.firebaseapp.com\",\n  databaseURL: \"https://test-45931.firebaseio.com\",\n  projectId: \"test-45931\",\n  storageBucket: \"test-45931.appspot.com\",\n  messagingSenderId: \"576273254451\"\n};\n\nfirebase.initializeApp(config);\n\nvar db = firebase.firestore();\n\nexport default db;","import React, { useState, useEffect } from 'react';\nimport db from '../../firebaseConfig'\n\nconst useGetChoreData = () => {\n    const [ choresData, setChoresData ] = useState( [] )\n\tconst [ isLoading, setIsLoading ] = useState(false);\n    const [ isError, setIsError ] = useState(false);\n    \n    useEffect( () => {\n\t\tconst getChoreData = async () => {\n\t\t\tsetIsLoading(true)\n\t\t\tsetIsError(false);\n\t\t\tconst result = await db.collection(\"chores\").get()\n\t\t\t.then( snapshot => {\n\t\t\t\treturn snapshot.docs.map(e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: e.id,\n\t\t\t\t\t\ttask: e.data().task,\n\t\t\t\t\t\tperson: e.data().person,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}).then(fetchedChores => {\n\t\t\t\tsetChoresData(fetchedChores);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}).catch( error => {\n                setIsError(true);\n                console.log('error getting data from firestore')\n\t\t\t})\n\t\t}\n\t\tgetChoreData();\n\t}, [])\n\n\tuseEffect( () => {\n\t\tconst periodicRefresh = async () => {\n\t\t\tconsole.log('refresh')\n\t\t\tconst result = await db.collection(\"chores\").get()\n\t\t\t.then( snapshot => {\n\t\t\t\treturn snapshot.docs.map(e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: e.id,\n\t\t\t\t\t\ttask: e.data().task,\n\t\t\t\t\t\tperson: e.data().person,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}).then(fetchedChores => {\n\t\t\t\tsetChoresData(fetchedChores);\n\t\t\t}).catch( error => {\n                setIsError(true);\n                console.log('error refreshing')\n\t\t\t})\n\t\t}\n\t\tconst intervalId = setInterval( () => periodicRefresh(), 1000);\n\n\t\treturn () => clearInterval(intervalId)\n\t}, [])\n\t\n\t// useEffect( () => {\n\t// \tconst listenForChanges = async () => {\n\t// \t\tdb.collection('chores').onSnapshot(snapshot => {\n\t// \t\t\tsetListener(!listener);\n\t// \t\t\tconsole.log(listener)\n\t// \t\t})\n\t// \t}\n\t// \t// listenForChanges();\n\t// }, [])\n    \n    return { choresData, isLoading, isError, setChoresData }\n}\n\nexport default useGetChoreData;\n\n// FETCHING \n\n// import db from './firebaseConfig'\n// import 'firebase/database'\n\n\n\t// db.doc(\"todos/1\").get().then((resp) => {\n\t// \tconsole.log(resp.data());\n\t// });\n\n\t// db.collection(\"todos\").get().then((resp) => {\n\t// \tconsole.log(resp.docs[0].data());\n\t// });\n\n\t//db.doc(\"todos/4\").set({content: 'oh jeez'})\n\n\t//.onSnapshot zamiast .get","import styled from 'styled-components';\nimport grey from '@material-ui/core/colors/grey'\n\nconst ChoreItemContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: ${props => props.odd ? '#EEE' : '#F7F7F7' };\n    padding: 0.7rem;\n\n    div:first-child {\n        h4 {\n            margin: 0.2rem 0;\n            font-size: 1.1rem;\n            font-weight: 300;\n            color: ${grey[700]};\n        }\n        span {\n            font-size: 0.9rem;\n            color: ${grey[600]};\n        }\n    }\n\n    &:hover {\n        background: ${grey[300]};\n    }\n        \n`\n\nexport default ChoreItemContainer;","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button'\n\nconst CloseButton = styled(Button)`\n    padding: 10px;\n    /* background-color: red; */\n    /* font-size: 10rem; */\n`\n\nexport default CloseButton;","import React from 'react'\nimport ChoreItemContainer from './styled/ChoreItemContainer'\nimport CloseButton from './styled/CloseButton'\nimport Divider from '@material-ui/core/Divider'\nimport db from '../firebaseConfig'\n\nexport default function ChoreItem(props) {\n\tconst { task, person, id, odd } = props;\n\n\tconst handleClick = () => {\n\t\tconsole.log(id)\n\t\tdb.collection('chores').doc(id).delete().then(function() {\n\t\t\tconsole.log(\"Document successfully deleted!\");\n\t\t}).catch(function(error) {\n\t\t\tconsole.error(\"Error removing document: \", error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<ChoreItemContainer odd={odd}>\n\t\t\t<div>\n\t\t\t\t<h4>{task}</h4>\n\t\t\t\t<Divider />\n\t\t\t\t<span>{person}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<CloseButton onClick={handleClick}>X</CloseButton>\n\t\t\t</div>\n\t\t</ChoreItemContainer>\n\t)\n}\n","import React from 'react';\nimport ChoreItem from './ChoreItem'\n\nconst ChoreList = props => {\n    const style = {\n        wrapper: {\n            maxHeight: '240px',\n            overflow: 'scroll',\n        },\n    }\n\n    const listOfChores = props.data ? props.data.map( (e, i) => {\n        return (\n            <ChoreItem task={e.task} person={e.person}key={e.id} odd={i % 2} id={e.id} key={e.id} />\n        )\n    }) : null;\n\n    return (\n        <>\n            {listOfChores}\n        </>\n    );\n}\n\nexport default ChoreList;","import TextField from '@material-ui/core/TextField'\nimport styled from 'styled-components'\n\nconst InputTextField = styled(TextField)`\n\n`\n\nexport default InputTextField;","import Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\n\nconst SubmitButton = styled(Button)`\n\n`\n\nexport default SubmitButton;","import styled from 'styled-components';\n\nconst AddChoreForm = styled.form`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    margin-bottom: 1rem;\n    \n`\n\nexport default AddChoreForm;","import React, { useState } from 'react';\nimport InputTextField from './styled/InputTextField'\nimport SubmitButton from './styled/SubmitButton'\nimport db from '../firebaseConfig'\nimport 'firebase/database'\nimport AddChoreForm from './styled/AddChoreForm'\n\nconst AddChore = props => {\n    const [ taskInputValue, setTaskInputValue ] = useState('')\n    const [ personInputValue, setPersonInputValue ] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if ( taskInputValue && personInputValue ) {\n            db.collection('chores').add({\n                task: taskInputValue,\n                person: personInputValue,\n            }).then(() => {\n                console.log('sukces')\n            }).catch(error => {\n                console.log(error)\n            })\n            setTaskInputValue('')\n            setPersonInputValue('')\n            // console.log(props.choresData)\n            // props.setChoresData([\n            //     ...props.choresData,\n            //     {\n            //         task: taskInputValue,\n            //         person: personInputValue,\n            //         id: '12121'\n            //     }\n            // ])\n        }\n    }\n\n    return (\n        <AddChoreForm onSubmit={handleSubmit}>\n            <InputTextField\n            autoComplete='off'\n            id=\"standard-full-width\"\n            label=\"add task\"\n            placeholder=\"type here\"\n            value={taskInputValue}\n            onChange={e => setTaskInputValue(e.target.value)}\n            margin=\"none\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            />\n            <InputTextField\n            autoComplete='off'\n            id=\"standard-full-width\"\n            label=\"who's doing it\"\n            value={personInputValue}\n            onChange={e => setPersonInputValue(e.target.value)}\n            placeholder=\"type here\"\n            margin=\"none\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            />\n            <SubmitButton type='submit' style={{marginRight: '8px',}}>\n                Submit\n            </SubmitButton>\n      </AddChoreForm>\n    )\n}\n\nexport default AddChore;","import styled from 'styled-components';\n\nconst Header = styled.div`\n    font-family: 'Ubuntu', sans-serif;\n    font-size: 3.5rem;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n    margin-bottom: 2.9rem;\n`\n\nexport default Header;","import { createGlobalStyle } from \"styled-components\";\nimport pink from '@material-ui/core/colors/pink';\nimport red from '@material-ui/core/colors/red';\n\nconst bgColor1 = red[200];\nconst bgColor2 = pink[300];\n\nconst smallerScreens = '713px'\n\n\nconst GlobalStyle = createGlobalStyle`\n\thtml {\n\t\tfont-size: 100%;\n\t\t@media (max-width: ${smallerScreens}) {\n\t\t\tfont-size: 90%;\n\t\t\tbackground: red;\n\t\t}\n\t\ttransition: 0.2s;\n\t}\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n  \tbody {\n    \tfont-family: 'Roboto', sans-serif;\n    \t/* background: linear-gradient(#ECB0D9, #E6BAE7); */\n\t\tbackground: linear-gradient(${bgColor1}, ${bgColor2});\n\t\tmin-width: 100vw;\n\t\tmin-height: 100vh;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-around;\n\t\talign-content: center;\n\t\tmargin: 0;\n\t\tcolor: #888;\n\t}\n`\n\nexport default GlobalStyle;\nexport { smallerScreens };","import styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport { smallerScreens } from './GlobalStyle'\n\nconst Wrapper = styled(Paper)`\n    &&& {\n        margin: 0 auto;\n        max-width: 43rem;\n        @media (max-width: ${smallerScreens}) {\n            width: calc(100% - 20px);\n        }\n        display: flex;\n        /* justify-content: space-evenly; */\n        flex-direction: column;\n        background: white;\n        padding: 1.9rem;\n        border-radius: 8px;\n        border-top-right-radius: 80px;\n        @media (max-width: ${smallerScreens}) {\n            min-height: 55vh;\n            max-height: 60vh;\n        }\n\n    }\n\n`\n\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nconst ChoreListContainer = styled.div`\n    overflow: scroll;        \n`\n\nexport default ChoreListContainer;","import React from 'react'\nimport styled from 'styled-components';\n\nconst $Loading = () => {\n\treturn (\n\t\t<div>\n\t\t\tLoading...\n\t\t</div>\n\t)\n}\n\nconst Loading = styled($Loading)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nexport default Loading;","import React from 'react';\nimport useGetChoreData from './components/hooks/useGetChoreData';\nimport ChoreList from './components/ChoresList';\nimport AddChore from './components/AddChore';\nimport Header from './components/styled/Header';\nimport GlobalStyle from './components/styled/GlobalStyle'\nimport Wrapper from './components/styled/Wrapper.js'\nimport ChoreListContainer from './components/styled/ChoreListContainer'\nimport Loading from './components/Loading'\n\n\nconst App = () => {\n\tconst { choresData, isLoading, isError, setChoresData } = useGetChoreData();\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle/>\n\t\t\t<Header>Split the chores</Header>\n\t\t\t<Wrapper>\n\t\t\t\t<AddChore choresData={choresData} setChoresData={setChoresData}/>\n\t\t\t\t<ChoreListContainer>\n\t\t\t\t\t{ isLoading ? <Loading /> : <ChoreList data={choresData} setChoresData={setChoresData}/>}\n\t\t\t\t</ChoreListContainer>\n\t\t\t</Wrapper>\n\t\t</>\n\t);\n}\n\nexport default App\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}