{"version":3,"sources":["components/styled/ChoreItemContainer.js","components/styled/CloseButton.js","firebaseConfig.js","components/ChoreItem.js","components/NoChores.js","components/ChoresList.js","components/styled/InputTextField.js","components/styled/SubmitButton.js","components/styled/AddChoreForm.js","components/AddChore.js","components/styled/Header.js","components/styled/GlobalStyle.js","components/styled/Wrapper.js","components/styled/ChoreListContainer.js","components/Loading.js","components/hooks/useListenForChoreData.js","App.js","serviceWorker.js","index.js"],"names":["ChoreItemContainer","styled","div","_templateObject","props","odd","grey","CloseButton","Button","CloseButton_templateObject","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","ChoreItem","task","person","id","timestamp","react_default","a","createElement","react_reveal","down","duration","styled_ChoreItemContainer","Divider_default","styled_CloseButton","onClick","collection","doc","delete","catch","error","console","NoChores","style","display","justifyContent","height","alignItems","padding","ChoreList","listOfChores","data","map","e","i","_React$createElement","key","Object","defineProperty","sort","b","seconds","Fragment","length","InputTextField","TextField","InputTextField_templateObject","SubmitButton","SubmitButton_templateObject","AddChoreForm","form","AddChoreForm_templateObject","AddChore","_useState","useState","_useState2","slicedToArray","taskInputValue","setTaskInputValue","_useState3","_useState4","personInputValue","setPersonInputValue","styled_AddChoreForm","onSubmit","preventDefault","add","Date","then","log","styled_InputTextField","autoComplete","label","placeholder","value","onChange","target","margin","InputLabelProps","shrink","styled_SubmitButton","type","marginRight","Header","Header_templateObject","bgColor1","red","bgColor2","pink","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","Wrapper","Paper","Wrapper_templateObject","ChoreListContainer","ChoreListContainer_templateObject","Loading","CircularProgress_default","useListenForChoreData","unsubscribe","choresData","setChoresData","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onSnapshot","snapshot","fetchedChores","docs","sent","stop","apply","this","arguments","listenForChoreData","App","_useListenForChoreDat","styled_GlobalStyle","styled_Header","styled_Wrapper","components_AddChore","styled_ChoreListContainer","components_Loading","ChoresList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d35c76f0.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport grey from '@material-ui/core/colors/grey'\n\nconst ChoreItemContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: ${props => props.odd ? '#EEE' : '#F7F7F7' };\n    padding: 0.7rem;\n\n    div:first-child {\n        h4 {\n            margin: 0.2rem 0;\n            font-size: 1.1rem;\n            font-weight: 300;\n            color: ${grey[700]};\n        }\n        span {\n            font-size: 0.9rem;\n            color: ${grey[600]};\n        }\n    }\n\n    &:hover {\n        background: ${grey[300]};\n    }\n        \n`\n\nexport default ChoreItemContainer;","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button'\n\nconst CloseButton = styled(Button)`\n    padding: 10px;\n    /* background-color: red; */\n    /* font-size: 10rem; */\n`\n\nexport default CloseButton;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nvar config = {\n  apiKey: \"AIzaSyAGzlpCDZ5rg7vZ9XVzYqI4-LiXZ8ectX8\",\n  authDomain: \"test-45931.firebaseapp.com\",\n  databaseURL: \"https://test-45931.firebaseio.com\",\n  projectId: \"test-45931\",\n  storageBucket: \"test-45931.appspot.com\",\n  messagingSenderId: \"576273254451\"\n};\n\nfirebase.initializeApp(config);\n\nvar db = firebase.firestore();\n\nexport default db;","import React from 'react'\nimport ChoreItemContainer from './styled/ChoreItemContainer'\nimport CloseButton from './styled/CloseButton'\nimport Divider from '@material-ui/core/Divider'\nimport db from '../firebaseConfig'\nimport { Fade } from 'react-reveal'\n\nexport default function ChoreItem(props) {\n\tconst { task, person, id, odd, timestamp } = props;\n\tconst handleClick = () => {\n\t\tdb.collection('chores').doc(id).delete()\n\t\t.catch(function(error) {\n\t\t\tconsole.error(\"Error removing document: \", error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<Fade down duration={300}>\n\t\t\t<ChoreItemContainer odd={odd}>\n\t\t\t\t<div>\n\t\t\t\t\t<h4>{task}</h4>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<span>{person}</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<CloseButton onClick={handleClick}>X</CloseButton>\n\t\t\t\t</div>\n\t\t\t</ChoreItemContainer>\n\t\t</Fade>\n\t)\n}\n","import React from 'react'\n\nexport default function NoChores() {\n\treturn (\n\t\t<div style={ { display: 'flex', justifyContent: 'center', height: '100%', alignItems: 'center', padding: '2rem 0' } }>\n\t\t\tNo chores to display.\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport ChoreItem from './ChoreItem'\nimport NoChores from './NoChores'\n\nconst ChoreList = props => {\n    let listOfChores = props.data ? props.data.map( (e, i) => {\n        \n        return (\n            <ChoreItem task={e.task} person={e.person} key={e.id} odd={i % 2} id={e.id} key={e.id} timestamp={e.timestamp}/>\n        )\n    }) : null;\n\n    listOfChores = listOfChores && listOfChores.sort( (a, b) => {\n        return b.props.timestamp.seconds - a.props.timestamp.seconds\n    })\n\n    return (\n        <>\n            {listOfChores.length ? listOfChores : <NoChores />}\n        </>\n    );\n}\n\nexport default ChoreList;","import TextField from '@material-ui/core/TextField'\nimport styled from 'styled-components'\n\nconst InputTextField = styled(TextField)`\n\n`\n\nexport default InputTextField;","import Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\n\nconst SubmitButton = styled(Button)`\n\n`\n\nexport default SubmitButton;","import styled from 'styled-components';\n\nconst AddChoreForm = styled.form`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    margin-bottom: 1rem;\n    \n`\n\nexport default AddChoreForm;","import React, { useState } from 'react';\nimport InputTextField from './styled/InputTextField'\nimport SubmitButton from './styled/SubmitButton'\nimport db from '../firebaseConfig'\nimport 'firebase/database'\nimport AddChoreForm from './styled/AddChoreForm'\n\nconst AddChore = props => {\n    const [ taskInputValue, setTaskInputValue ] = useState('')\n    const [ personInputValue, setPersonInputValue ] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if ( taskInputValue && personInputValue ) {\n            db.collection('chores').add({\n                task: taskInputValue,\n                person: personInputValue,\n                timestamp: new Date(),\n            }).then(() => {\n                console.log('sukces')\n            }).catch(error => {\n                console.log(error)\n            })\n            setTaskInputValue('')\n            setPersonInputValue('')\n        }\n    }\n\n    return (\n        <AddChoreForm onSubmit={handleSubmit}>\n            <InputTextField\n            autoComplete='off'\n            id=\"standard-full-width\"\n            label=\"add task\"\n            placeholder=\"type here\"\n            value={taskInputValue}\n            onChange={e => setTaskInputValue(e.target.value)}\n            margin=\"none\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            />\n            <InputTextField\n            autoComplete='off'\n            id=\"standard-full-width\"\n            label=\"who's doing it\"\n            value={personInputValue}\n            onChange={e => setPersonInputValue(e.target.value)}\n            placeholder=\"type here\"\n            margin=\"none\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            />\n            <SubmitButton type='submit' style={{marginRight: '8px',}}>\n                Submit\n            </SubmitButton>\n      </AddChoreForm>\n    )\n}\n\nexport default AddChore;","import styled from 'styled-components';\n\nconst Header = styled.div`\n    font-family: 'Ubuntu', sans-serif;\n    font-size: 3.5rem;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n    margin-bottom: 2.9rem;\n`\n\nexport default Header;","import { createGlobalStyle } from \"styled-components\";\nimport pink from '@material-ui/core/colors/pink';\nimport red from '@material-ui/core/colors/red';\n\nconst bgColor1 = red[200];\nconst bgColor2 = pink[300];\n\nconst smallerScreens = '713px'\n\n\nconst GlobalStyle = createGlobalStyle`\n\thtml {\n\t\tfont-size: 100%;\n\t\t@media (max-width: ${smallerScreens}) {\n\t\t\tfont-size: 90%;\n\t\t\tbackground: red;\n\t\t}\n\t}\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n  \tbody {\n    \tfont-family: 'Roboto', sans-serif;\n    \t/* background: linear-gradient(#ECB0D9, #E6BAE7); */\n\t\tbackground: linear-gradient(${bgColor1}, ${bgColor2});\n\t\tmin-width: 100vw;\n\t\tmin-height: 100vh;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-around;\n\t\talign-content: center;\n\t\tmargin: 0;\n\t\tcolor: #888;\n\t}\n`\n\nexport default GlobalStyle;\nexport { smallerScreens };","import styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport { smallerScreens } from './GlobalStyle'\n\nconst Wrapper = styled(Paper)`\n    &&& {\n        margin: 0 auto;\n        max-width: 43rem;\n        min-height: 55vh;\n        max-height: 63vh;\n        @media (max-width: ${smallerScreens}) {\n            width: calc(100% - 20px);\n        }\n        display: flex;\n        /* justify-content: space-evenly; */\n        flex-direction: column;\n        background: white;\n        padding: 1.9rem;\n        border-radius: 8px;\n        border-top-right-radius: 80px;\n        @media (max-width: ${smallerScreens}) {\n            min-height: 55vh;\n            max-height: 60vh;\n        }\n\n    }\n\n`\n\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nconst ChoreListContainer = styled.div`\n    overflow: scroll;\n    height: 100%;    \n`\n\nexport default ChoreListContainer;","import React from 'react'\n//import styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst Loading = () => {\n\treturn (\n\t\t<div style={ { display: 'flex', justifyContent: 'center', height: '100%', alignItems: 'center', padding: '2rem 0' } }>\n\t\t\t<CircularProgress/>\n\t\t</div>\n\t\t\n\t)\n}\n\n\n\nexport default Loading;","import { useState, useEffect } from 'react';\nimport db from '../../firebaseConfig'\n\nconst useListenForChoreData = () => {\n    const [ choresData, setChoresData ] = useState( [] )\n\tconst [ isLoading, setIsLoading ] = useState(false);\n    const [ isError, setIsError ] = useState(false);\n    \n    let unsubscribe;\n    useEffect( () => {\n\t\tconst listenForChoreData = async () => {\n\t\t\tsetIsLoading(true)\n\t\t\tunsubscribe = await db.collection(\"chores\").onSnapshot( snapshot => {\n                setIsError(false);\n\t\t\t\tconst fetchedChores = snapshot.docs.map(e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: e.id,\n\t\t\t\t\t\ttask: e.data().task,\n\t\t\t\t\t\tperson: e.data().person,\n\t\t\t\t\t\ttimestamp: e.data().timestamp,\n\t\t\t\t\t}\n                })\n                setChoresData(fetchedChores);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}, error => setIsError(true) )\n\t\t}\n        listenForChoreData();\n        \n        return ( () => unsubscribe() )\n\t}, [])\n\t\n\t// useEffect( () => {\n\t// \tconst listenForChanges = async () => {\n\t// \t\tdb.collection('chores').onSnapshot(snapshot => {\n\t// \t\t\tsetListener(!listener);\n\t// \t\t\tconsole.log(listener)\n\t// \t\t})\n\t// \t}\n\t// \t// listenForChanges();\n\t// }, [])\n    \n    return { choresData, isLoading, isError, setChoresData }\n}\n\nexport default useListenForChoreData;\n","import React from 'react';\nimport ChoreList from './components/ChoresList';\nimport AddChore from './components/AddChore';\nimport Header from './components/styled/Header';\nimport GlobalStyle from './components/styled/GlobalStyle'\nimport Wrapper from './components/styled/Wrapper.js'\nimport ChoreListContainer from './components/styled/ChoreListContainer'\nimport Loading from './components/Loading'\nimport useListenForChoreData from './components/hooks/useListenForChoreData'\n\nconst App = () => {\n\tconst { choresData, isLoading } = useListenForChoreData();\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle/>\n\t\t\t<Header>Split the chores</Header>\n\t\t\t<Wrapper>\n\t\t\t\t<AddChore/>\n\t\t\t\t<ChoreListContainer>\n\t\t\t\t\t{ isLoading ? <Loading /> : <ChoreList data={choresData} />}\n\t\t\t\t</ChoreListContainer>\n\t\t\t</Wrapper>\n\t\t</>\n\t);\n}\n\nexport default App\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}